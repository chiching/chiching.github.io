"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["8303"],{5095:function(n,r,e){e.r(r),e.d(r,{default:function(){return a}});var i=e(5893),c=e(65);function o(n){let r=Object.assign({p:"p",code:"code",ol:"ol",li:"li",pre:"pre"},(0,c.ah)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.p,{children:"#【HarmonyOS HiSpark Wi-Fi IoT 智能家居套件】编译脚本学习1"}),"\n",(0,i.jsxs)(r.p,{children:["参考教程搭建好了环境后，第一步开始编译，运行",(0,i.jsx)(r.code,{children:"python build.py wifiiot"}),"。突然有了几个问题。"]}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsx)(r.li,{children:"为什么开始编译是运行一个python脚本，鸿蒙不是c语言写的吗？"}),"\n",(0,i.jsx)(r.li,{children:"如果知道编译构建是用gn, ninja，安装过程中的确有安装这些工具，但是没有用到啊？"}),"\n",(0,i.jsx)(r.li,{children:"这个脚本有啥用呢？"}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"接下来大概看一下脚本就明白这几个问题了。"}),"\n",(0,i.jsx)(r.p,{children:"在看编译相关的东西的时候，可能猜也猜到了相关的东西是放在build文件夹里面的。"}),"\n",(0,i.jsx)(r.p,{children:"首先看看build.py文件，看构建是怎么开始的。 看下面main函数的注释。"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:"def main():\r\n    if not __package__:\r\n        # 将build文件夹加入搜索路径\r\n        path = os.path.join(os.path.abspath(os.path.dirname(__file__)), 'build')\r\n        sys.path.insert(0, path)\r\n\r\n    parser = argparse.ArgumentParser(usage=usage())\r\n    parser_list = []\r\n    parser_list.append({\r\n        'name': 'compile',\r\n        'help': 'Build source code'\r\n    })\r\n\r\n    for each in parser_list:\r\n        # 这里导入了build/lite下面的compile文件。\r\n        module = importlib.import_module('.{}'.format(each.get('name')), 'lite')\r\n        module.add_options(parser)\r\n        # 将compile.py文件中的exec_command设为执行命令。\r\n        parser.set_defaults(command=module.exec_command)\r\n\r\n    args = parser.parse_args()\r\n\r\n    try:\r\n        # 执行compile中的exec_command函数。\r\n        status = args.command(args)\r\n    except KeyboardInterrupt:\r\n        logging.warning('interrupted')\r\n        status = -1\r\n    except Exception as e:\r\n        print(e)\r\n        parser.print_help()\r\n        status = -1\r\n\r\n    return status\n"})}),"\n",(0,i.jsx)(r.p,{children:"接着看build/lite/compile.py中的exec_command函数。"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:'def exec_command(args):\r\n    callback_dict = CallbackDict()\r\n\r\n    # parse product\r\n    if args.product:\r\n        config = Config(args)\r\n        # 注册 config_create函数准备配置信息，包括搜索编译构建工具gn, ninja，riscv32-unknown-elf-gcc等工具\r\n        callback_dict.register(config.product, config_create)\r\n        # 注册 run_build函数，开始构建。\r\n        callback_dict.register(config.product, run_build)\r\n        # 执行上面两个函数。\r\n        callback_dict.excute(config.product,\r\n                             config=config,\r\n                             args=args)\r\n    else:\r\n        raise Exception("Error: product not found.")\n'})}),"\n",(0,i.jsx)(r.p,{children:"到这里就已经完了，再里面就是config_create，run_build的细节，但是上面的问题还是不清晰。"}),"\n",(0,i.jsx)(r.p,{children:"下面再跟进config_create看一下：\r\nconfig_create(compile_process.py) -> check_build -> parse_product_json -> Compile.get_tool_path(config.py)\r\nget_tool_path函数中，就有找riscv32-unknown-elf-gcc，gn和ninja等工具的路径。"}),"\n",(0,i.jsx)(r.p,{children:"再看一下run_build：\r\nrun_build(compile_process.py)-> Compile.compile (config.py) -> exec_command(util.py)\r\nexec_command这里开了新的进程，来跑上面准备好的命令和参数。"}),"\n",(0,i.jsx)(r.p,{children:"最终执行的，就是两个："}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-shell",children:'/usr/bin/gn gen /your_project_path/harmony/code/out/wifiiot --root=. --dotfile=build/lite/.gn --args=\'product = "wifiiot" ohos_build_type = "release"\'\r\n \r\n/usr/bin/ninja -w dupbuild=warn -C /your_project_path/harmony/code/out/wifiiot\n'})}),"\n",(0,i.jsx)(r.p,{children:"如果不用python脚本，直接执行上面两个命令，效果一样。\r\ngn根据当前的代码树及配置，产生ninja文件，并把它们放在给定的目录下，然后ninja开始编译"}),"\n",(0,i.jsx)(r.p,{children:"所以，python脚本可能就是为了简化，标准化，跨平台等，不用记忆那些命令，格式以及参数等。"})]})}function t(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,c.ah)(),n.components);return r?(0,i.jsx)(r,{...n,children:(0,i.jsx)(o,{...n})}):o(n)}let a=t;t.__RSPRESS_PAGE_META={},t.__RSPRESS_PAGE_META["notes%2F02-Software%20Development%2Fmiddlewares%2Fharmony%2F1.build.md"]={toc:[],title:"",frontmatter:{}}}}]);